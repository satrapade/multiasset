\documentclass{article}


\usepackage[portrait, headheight = 0cm, margin=0.25cm, top = 0.25cm]{geometry} 
\usepackage[export]{adjustbox} 
\usepackage{graphicx}
\usepackage[dvipsnames,table]{xcolor} % [dvipsnames,table] for setting colors \usepackage{amsmath} \usepackage{xfrac}
\usepackage{tikz}
\usetikzlibrary{shapes.geometric}
\usetikzlibrary{shapes.misc}
%\usetikzlibrary{external}
%\tikzexternalize % activate!
%\usepackage{sparklines}
\usepackage{xfrac}
\usepackage[space]{grffile}
\usepackage{hyperref}

\DeclareRobustCommand\Tstrut{\rule{0pt}{2.6ex}}         % = `top' strut
\DeclareRobustCommand\Bstrut{\rule[-0.9ex]{0pt}{0pt}}   % = `bottom' strut
\renewcommand{\familydefault}{\sfdefault}


\begin{document}


<<,cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=

source("https://raw.githubusercontent.com/satrapade/latex_utils/master/latex_helpers_v2.R")

source("https://raw.githubusercontent.com/satrapade/utility/master/utility_functions.R")

require(data.table)
require(scales)
require(RcppRoll)
require(magrittr)
require(fasttime)
require(lubridate)
require(scales)
require(fields)
require(gsubfn)
require(stringi)
require(Matrix)
require(akima)
require(ggplot2)

resampled_spx_vol<-"compressed_resampled_spx_vol.txt" %>% scan(character()) %>% decompress
resampled_sx5e_vol<-"compressed_resampled_sx5e_vol.txt" %>% scan(character()) %>% decompress
resampled_ftse_vol<-"compressed_resampled_ftse_vol.txt" %>% scan(character()) %>% decompress
resampled_nky_vol<-"compressed_resampled_nky_vol.txt" %>% scan(character()) %>% decompress
resampled_eem_vol<-"compressed_resampled_eem_vol.txt" %>% scan(character()) %>% decompress

all_vol<-rbind( # data.table with all volatilities
  data.table(resampled_spx_vol,market="spx"),
  data.table(resampled_sx5e_vol,market="sx5e"),
  data.table(resampled_ftse_vol,market="ftse"),
  data.table(resampled_nky_vol,market="nky"),
  data.table(resampled_eem_vol,market="eem")
)[,.(
    Date=as.Date(stri_sub(Date,1,10),format="%Y-%m-%d"),
    Strike=Strike,
    Days=Days,
    ImpliedVol=ImpliedVol,
    ClosePrice=ClosePrice,
    market=market
)][,
  .(
    Strike=Strike,
    Days=Days,
    ImpliedVol=ImpliedVol,
    ClosePrice=ClosePrice,
    market=market,
    market_count=length(market)
  ),
  keyby=Date
][ClosePrice>0]

# surface pillars
all_strikes<-all_vol[,.(strikes=sort(unique(Strike))),keyby=market]
all_maturities<-all_vol[,.(maturities=sort(unique(Days))),keyby=market]

listed_expiries<-list(
    quote(month %in% c("March","June","September","December")),
    quote(wday=="Friday"),
    quote(wday_count==3)
)


#
# get common dates for all markets 
# in volsurface table
make_common_dates<-function(vsurfs){
  vsurfs[
    ,.(date=Date[1]),
    keyby=c("market","Date")
  ][
    ,.(markets=length(market)),keyby=date
  ][
    markets==max(markets),date
  ]
}


#
# make a shedule from a list of volatility surfaces
make_shedule<-function(volsurfs)
{
  common_dates<-make_common_dates(volsurfs)
  markets<-sort(unique(volsurfs$market))
  shedule_df <- data.table(
    date=rep(common_dates,times=length(markets)),
    market=rep(markets,each=length(common_dates))
  )
  shedule_df
}

# create a roll schedule from a shedule
make_roll_dates<-function(filter_list,vsurfs){
  
  shedule<-make_shedule(vsurfs)
  
  date_df<-data.table(
    date=shedule$date,
    day=day(shedule$date),
    mday=mday(shedule$date),
    qday=qday(shedule$date),
    yday=yday(shedule$date),
    pday=seq_along(shedule$date),
    wday=weekdays(shedule$date),
    month=months(shedule$date),
    wday_count=ceiling(mday(shedule$date)/7)
  )[,.SD,keyby=date]
  
  res0<-Reduce(function(a,b)eval(bquote(.(a)[.(b)])),filter_list,init=date_df)
  res1<-res0[,.SD,keyby=date]
  ndx<-sort(unique(res1$date))
  res2<-res1[J(ndx),.SD,mult="first"]
  res3<-data.table(
    res2,
    start=shedule$date[res2$pday],
    end=shedule$date[c(res2$pday[-1],nrow(shedule))],
    roll=1:nrow(res2)
  )
  shedule_with_roll<-data.table(shedule,roll=findInterval(shedule$date,res3$date))
  res4<-res3[,.SD,keyby=roll][shedule_with_roll[,.SD,keyby=roll]][roll>0][,.(
    roll=roll,
    date=i.date,
    start=start,
    end=end,
    market=market,
    maturity=as.integer(end-i.date)
  )]
  px<-all_vol[,.(
      date=as.Date(stri_sub(Date[1],1,10),format="%Y-%m-%d"),
      close=ClosePrice[1],
      vol=mean(ImpliedVol)
  ),keyby=c("market","Date"),][,.(date,market,close,vol)]
  
  res5<-px[,.SD,keyby=c("date","market")][res4[,.SD,keyby=c("date","market")]]
  
  res5
}

#
# interpolate vols
# on resampled vol surface
#
interpolate_vol<-function(date,strike,days,vsurf)
{
  strikes<-sort(unique(vsurf$Strike))
  maturities<-sort(unique(vsurf$Days))
  option_dets<-data.table(
    date=date,
    lo_strike=strikes[findInterval(strike,strikes)],
    hi_strike=strikes[findInterval(strike,strikes)+1],
    lo_mat=maturities[findInterval(days,maturities)],
    hi_mat=maturities[findInterval(days,maturities)+1]
  )
  vol_ll<-merge(x=option_dets,y=vsurf,by.x=c("date","lo_strike","lo_mat"),by.y=c("Date","Strike","Days"))$ImpliedVol
  vol_lh<-merge(x=option_dets,y=vsurf,by.x=c("date","lo_strike","hi_mat"),by.y=c("Date","Strike","Days"))$ImpliedVol
  vol_hl<-merge(x=option_dets,y=vsurf,by.x=c("date","hi_strike","lo_mat"),by.y=c("Date","Strike","Days"))$ImpliedVol
  vol_hh<-merge(x=option_dets,y=vsurf,by.x=c("date","hi_strike","hi_mat"),by.y=c("Date","Strike","Days"))$ImpliedVol
  t_strike<-(strike-option_dets$lo_strike)/(option_dets$hi_strike-option_dets$lo_strike)
  t_mat<-(days-option_dets$lo_mat)/(option_dets$hi_mat-option_dets$lo_mat)
  rowSums(cbind(
    vol_ll*(1-t_strike)*(1-t_mat),
    vol_hl*(t_strike)*(1-t_mat),
    vol_lh*(1-t_strike)*(t_mat),
    vol_hh*(t_strike)*(t_mat)
  ))
}

shedule<-make_roll_dates(
  filter_list=listed_expiries,
  vsurfs=all_vol
)

# option models

# european call
EC <- function(S,X,t,r,v)
{
  d1 <- (log(S/X)+(r+0.5*v^2)*t)/(v*sqrt(t))
  d2 <- d1-v*sqrt(t)
  S*pnorm(d1)-X*exp(-r*t)*pnorm(d2)
}


# european put
EP  <- function(S,X,t,r,v)
{
  d1 <- (log(S/X)+(r+0.5*v^2)*t)/(v*sqrt(t))
  d2 <- d1-v*sqrt(t)
  X*exp(-r*t)*pnorm(-d2)-S*pnorm(-d1)
}


# strike solvers

# call premium to strike
C2K<-function(K,C,F,v,t,n=3){
  for(i in 1:n){
    d1<-(log(F/K)+(0.5*v^2)*t)/(v*sqrt(t))
    d2<-d1-v*sqrt(t)
    Nd1<-pnorm(d1)
    Nd2<-pnorm(d2)
    K<-F*Nd1/Nd2-C/Nd2
  }
  K
}

# put premium to strike
P2K<-function(K,P,F,v,t,n=3){
  for(i in 1:n){
    d1<-(log(F/K)+(0.5*v^2)*t)/(v*sqrt(t))
    d2<-d1-v*sqrt(t)
    Nmd1<-pnorm(-d1)
    Nmd2<-pnorm(-d2)
    K<-F*Nmd1/Nmd2+P/Nmd2
  }
  K
}

# delta to put strike 
D2CK<-function(delta,close,vol,maturity){
  close*exp(qnorm(1-delta,sd=vol*sqrt(maturity),lower.tail=TRUE))
}

# delta to call strike 
D2PK<-function(delta,close,vol,maturity){
  close*exp(qnorm(delta,sd=vol*sqrt(maturity),lower.tail=TRUE))
}



#
#
#
compute_option_premium<-function(
  shedule,
  all_vol,
  strike_fun=function(close,vol,maturity)close,
  model=EC
)merge(
  x=shedule[date==start,.(
    market,
    strike_close=close,
    strike_vol=vol,
    strike=strike_fun(close,vol,maturity),
    roll
  )],
  y=shedule[,.(date,market,close,roll,maturity)],
  by.x=c("market","roll"),
  by.y=c("market","roll")
)[,
  local({
    the_strikes<-all_strikes[market,strikes]
    the_maturities<-all_maturities[market,maturities]
    i<-findInterval(pmax(strike,0),the_strikes)
    j<-findInterval(pmax(maturity,0),the_maturities)
    dets<-data.table(
      date=date,
      market=market,
      lo_strike=the_strikes[i],
      hi_strike=the_strikes[i+1],
      lo_maturity=the_maturities[j],
      hi_maturity=the_maturities[j+1]
    )
    vol_ll<-merge(
      x=dets,
      y=all_vol,
      by.x=c("market","date","lo_strike","lo_maturity"),
      by.y=c("market","Date","Strike","Days")
    )$ImpliedVol
    vol_lh<-merge(
      x=dets,
      y=all_vol,
      by.x=c("market","date","lo_strike","hi_maturity"),
      by.y=c("market","Date","Strike","Days")
    )$ImpliedVol
    vol_hl<-merge(
      x=dets,
      y=all_vol,
      by.x=c("market","date","hi_strike","lo_maturity"),
      by.y=c("market","Date","Strike","Days")
    )$ImpliedVol
    vol_hh<-merge(
      x=dets,
      y=all_vol,
      by.x=c("market","date","hi_strike","hi_maturity"),
      by.y=c("market","Date","Strike","Days")
    )$ImpliedVol
    t_strike<-(strike-dets$lo_strike)/(dets$hi_strike-dets$lo_strike)
    t_mat<-(maturity-dets$lo_maturity)/(dets$hi_maturity-dets$lo_maturity)
    vol<-rowSums(cbind(
      vol_ll*(1-t_strike)*(1-t_mat),
      vol_hl*(t_strike)*(1-t_mat),
      vol_lh*(1-t_strike)*(t_mat),
      vol_hh*(t_strike)*(t_mat)
    ))
    premium<-model(close, strike, maturity/365, 0,vol)
    list(
      date=date,
      strike_close=strike_close,
      strike_vol=strike_vol,
      strike=strike,
      option_maturity=maturity,
      option_vol=vol,
      premium=premium
    )
  }),
  keyby=market
]

#
#
#
make_backtest<-function(
  shedule,
  volsurf,
  model,
  strike_fun=function(close,vol,maturity)close*0.9
)
{
  
  # roll strikes, 
  # compute option premium
  options<-merge(
    x=shedule,
    y=compute_option_premium(
      shedule,
      volsurf,
      strike_fun=strike_fun,
      model=model
    )[,.(market,date,strike_close,strike,premium)],
    by.x=c("date","market"),
    by.y=c("date","market")
  )
  
  # 
  #
  backtest<-data.table(
    market=options$market,
    date=options$date,
    start=options$start,
    end=options$end,
    maturity=options$maturity,
    reval=options$premium/options$strike_close
  )[,c(.SD,list(
    cash=cumsum(ifelse(
      start==date,
      -reval,
      0
    )+ifelse(
      maturity==1,
      reval,
      0
    )),
    holdings=ifelse(maturity==1,0,reval)
  ))][,.(
    market,
    date,
    start,
    end,
    maturity,
    reval,
    pnl=cash+holdings
  )]

  #
  #
  backtest 
  
}

strategy_weights<-function(s)do.call(rbind,mapply(function(x)x$weight,s,SIMPLIFY=FALSE))

make_strategy<-function(
  strategy,
  shedule,
  volsurf
){
 
  bk<-mapply(function(leg){
    leg_res<-make_backtest(
      shedule=shedule,
      volsurf=volsurf,
      model=leg$model,
      strike_fun=leg$strike
    )
    leg_res
  },strategy,SIMPLIFY=FALSE)
  
  w<-strategy_weights(strategy)
  
  strat_res<-do.call(cbind,mapply(function(leg)leg$pnl,bk,SIMPLIFY=FALSE))%*%w
  
  data.table(
    date=bk[[1]]$date,
    pnl=strat_res[,1]
  )
  
}

dof<-fread("dof.csv")
dof$Date<-as.Date(dof$Date,format="%Y-%m-%d")
dof$PnL<-cumsum(dof$PnL)

@

<<,cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
#
# strategies
#

########################################
# short 90-100 putspread
########################################
strategy_90_100_PS<-list(
  leg1=list(
    model=EP,
    strike=function(close,vol,maturity){ close*0.9 },
    weight=(+1)
  ),
  leg2=list(
    model=EP,
    strike=function(close,vol,maturity){ close*1.0 },
    weight=(-1)
  )
)

########################################
# short ATM straddle
########################################
strategy_SS<-list(
  leg1=list(
    model=EC,
    strike=function(close,vol,maturity){ close*1.0 },
    weight=(-1)
  ),
  leg2=list(
    model=EP,
    strike=function(close,vol,maturity){ close*1.0 },
    weight=(-1)
  )
)

########################################
# CSC, 25-45 delta CS vs solve-P
########################################
strategy_CSC<-list(
  leg1=list(
    model=EC,
    strike=function(close,vol,maturity){ 
      call_K_low<-K<-D2CK(0.45,close,vol,maturity/365)
      call_K_low
    },
    weight=(+1)
  ),
  leg2=list(
    model=EC,
    strike=function(close,vol,maturity){ 
      call_K_hi<-K<-D2CK(0.25,close,vol,maturity/365)
      call_K_hi
    },
    weight=(-1)
  ),
  leg3=list(
    model=EP,
    strike=function(close,vol,maturity){ 
      call_K_low<-K<-D2CK(0.45,close,vol,maturity/365)
      call_K_hi<-K<-D2CK(0.25,close,vol,maturity/365)
      CS_premium<-EC(close,call_K_low,maturity/365,0,vol)-EC(close,call_K_hi,maturity/365,0,vol)
      put_K<-P2K(close,CS_premium,close,vol,maturity/365)
      put_K
    },
    weight=(-1)
  )
)

########################################
# PSC, 25-45 delta PS vs solve-C
########################################
strategy_PSC<-list(
  leg1=list(
    model=EP,
    strike=function(close,vol,maturity){ 
      put_K_hi<-D2PK(0.45,close,vol,maturity/365)
      put_K_hi
    },
    weight=(+1)
  ),
  leg2=list(
    model=EP,
    strike=function(close,vol,maturity){ 
      put_K_low<-D2PK(0.25,close,vol,maturity/365)
      put_K_low
    },
    weight=(-1)
  ),
  leg3=list(
    model=EC,
    strike=function(close,vol,maturity){ 
      put_K_hi<-D2PK(0.45,close,vol,maturity/365)
      put_K_low<-D2PK(0.25,close,vol,maturity/365)
      PS_premium<-EP(close,put_K_hi,maturity/365,0,vol)-EP(close,put_K_low,maturity/365,0,vol)
      call_K<-C2K(close,PS_premium,close,vol,maturity/365)
      call_K
    },
    weight=(-1)
  )
)

########################################
# PR, 45 delta P vs solve-P @ half the
# premium at twice the size
########################################
strategy_PR<-list(
  leg1=list(
    model=EP,
    strike=function(close,vol,maturity){ 
      put_K_hi<-D2PK(0.45,close,vol,maturity/365)
      put_K_hi
    },
    weight=(+1)
  ),
  leg2=list(
    model=EP,
    strike=function(close,vol,maturity){ 
      put_K_hi<-D2PK(0.45,close,vol,maturity/365)
      P_premium<-EP(close,put_K_hi,maturity/365,0,vol)
      put_K_low<-P2K(close,P_premium/2,close,vol,maturity/365)
    },
    weight=(-2)
  )
)

########################################
# CR, 45 delta C vs solve-C @ half the
# premium at twice the size
########################################
strategy_CR<-list(
  leg1=list(
    model=EC,
    strike=function(close,vol,maturity){ 
      call_K_low<-D2CK(0.45,close,vol,maturity/365)
      call_K_low
    },
    weight=(+1)
  ),
  leg2=list(
    model=EC,
    strike=function(close,vol,maturity){ 
      call_K_low<-D2CK(0.45,close,vol,maturity/365)
      C_premium<-EC(close,call_K_low,maturity/365,0,vol)
      call_K_high<-C2K(close,C_premium/2,close,vol,maturity/365)
    },
    weight=(-2)
  )
)


@


<<,cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=

g_close<-shedule %>% 
  ggplot() +
  geom_line(aes(x=date,y=close,col=market)) +
  ggtitle("Market closing prices")

g_vol<-shedule %>% 
  ggplot() +
  geom_line(aes(x=date,y=vol,col=market)) +
  ggtitle("Market average volatility")


g_dof<-dof %>% 
  ggplot() +
  geom_line(aes(x=Date,y=PnL))


@


\tableofcontents

\newpage
\section{DOF performance}

\begin{center}
\Sexpr{make_plot(plot(g_dof),height="15cm",width="15cm")}
\end{center}

We wish to investigate the cause of infrequent, relatively large drawdowns.

\newpage
\section{Dataset}

We use historical volatility surfaces from JPM's OptionMetrics database. Average volatility,
closing prices by market shown below. 

\begin{tabular}{m{10cm}m{10cm}}
\hline
\Sexpr{make_plot(plot(g_close),height="10cm",width="10cm")}
&
\Sexpr{make_plot(plot(g_vol),height="10cm",width="10cm")}
\end{tabular}


<<,cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=


g_spx_90_100_ps<-melt(merge(
  x=make_strategy(strategy=strategy_90_100_PS,shedule[market=="spx"],all_vol[market=="spx"]),
  y=dof,
  by.x="date",
  by.y="Date"
)[,.(
  date,
  backtest=cumsum(c(0,diff(pnl)))*mean(diff(PnL))/mean(diff(pnl)),
  dof=cumsum(c(0,diff(PnL)))
)],id.vars = "date",measure.vars = c("backtest","dof")) %>% 
  ggplot() +
  geom_line(aes(x=date,y=value,col=variable),size=2,alpha=0.75)+
  ggtitle("Quarterly rolling short 100-90 pct SPX put spreads vs DOF")



@

\newpage
\section{SPX Q90-100 PS vs DOF performance}


\begin{center}
\Sexpr{make_plot(plot(g_spx_90_100_ps),height="20cm",width="20cm")}
\end{center}


<<,cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=

bktst_SPX_CSC<-make_strategy(strategy=strategy_CSC,shedule[market=="spx"],all_vol[market=="spx"])
bktst_SPX_PSC<-make_strategy(strategy=strategy_PSC,shedule[market=="spx"],all_vol[market=="spx"])
bktst_SPX_SS<-make_strategy(strategy=strategy_SS,shedule[market=="spx"],all_vol[market=="spx"])
bktst_SPX_CR<-make_strategy(strategy=strategy_CR,shedule[market=="spx"],all_vol[market=="spx"])
bktst_SPX_PR<-make_strategy(strategy=strategy_PR,shedule[market=="spx"],all_vol[market=="spx"])

g_spx_csc<- bktst_SPX_CSC %>% ggplot() + geom_line(aes(x=date,y=pnl),size=2,alpha=0.75) + ggtitle("SPX CSC")
g_spx_psc<- bktst_SPX_PSC %>% ggplot() + geom_line(aes(x=date,y=pnl),size=2,alpha=0.75) + ggtitle("SPX PSC")
g_spx_ss<- bktst_SPX_SS %>% ggplot() + geom_line(aes(x=date,y=pnl),size=2,alpha=0.75) + ggtitle("SPX SS")
g_spx_cr<- bktst_SPX_CR %>% ggplot() + geom_line(aes(x=date,y=pnl),size=2,alpha=0.75) + ggtitle("SPX CR")
g_spx_pr<- bktst_SPX_PR %>% ggplot() + geom_line(aes(x=date,y=pnl),size=2,alpha=0.75) + ggtitle("SPX PR")


@

\newpage
\section{Strategies for SPX}

\subsection{CSC}

\begin{center}
\Sexpr{make_plot(plot(g_spx_csc),height="20cm",width="20cm")}
\end{center}

\subsection{PSC}

\begin{center}
\Sexpr{make_plot(plot(g_spx_psc),height="20cm",width="20cm")}
\end{center}

\subsection{SS}

\begin{center}
\Sexpr{make_plot(plot(g_spx_ss),height="20cm",width="20cm")}
\end{center}

\subsection{CR}

\begin{center}
\Sexpr{make_plot(plot(g_spx_cr),height="20cm",width="20cm")}
\end{center}

\subsection{PR}

\begin{center}
\Sexpr{make_plot(plot(g_spx_pr),height="20cm",width="20cm")}
\end{center}


<<,cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=

bktst_SX5E_CSC<-make_strategy(strategy=strategy_CSC,shedule[market=="sx5e"],all_vol[market=="sx5e"])
bktst_SX5E_PSC<-make_strategy(strategy=strategy_PSC,shedule[market=="sx5e"],all_vol[market=="sx5e"])
bktst_SX5E_SS<-make_strategy(strategy=strategy_SS,shedule[market=="sx5e"],all_vol[market=="sx5e"])

g_sx5e_csc<- bktst_SX5E_CSC %>% ggplot() + geom_line(aes(x=date,y=pnl),size=2,alpha=0.75) + ggtitle("SX5E CSC")
g_sx5e_psc<- bktst_SX5E_PSC %>% ggplot() + geom_line(aes(x=date,y=pnl),size=2,alpha=0.75) + ggtitle("SX5E PSC")
g_sx5e_ss<- bktst_SX5E_SS %>% ggplot() + geom_line(aes(x=date,y=pnl),size=2,alpha=0.75) + ggtitle("SX5E SS")

@

\newpage
\section{Strategies for SX5E}

\subsection{CSC}

\begin{center}
\Sexpr{make_plot(plot(g_sx5e_csc),height="20cm",width="20cm")}
\end{center}

\subsection{PSC}

\begin{center}
\Sexpr{make_plot(plot(g_sx5e_psc),height="20cm",width="20cm")}
\end{center}

\subsection{SS}

\begin{center}
\Sexpr{make_plot(plot(g_sx5e_ss),height="20cm",width="20cm")}
\end{center}

<<,cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=

bktst_FTSE_CSC<-make_strategy(strategy=strategy_CSC,shedule[market=="ftse"],all_vol[market=="ftse"])
bktst_FTSE_PSC<-make_strategy(strategy=strategy_PSC,shedule[market=="ftse"],all_vol[market=="ftse"])
bktst_FTSE_SS<-make_strategy(strategy=strategy_SS,shedule[market=="ftse"],all_vol[market=="ftse"])

g_ftse_csc<- bktst_FTSE_CSC %>% ggplot() + geom_line(aes(x=date,y=pnl),size=2,alpha=0.75) + ggtitle("FTSE CSC")
g_ftse_psc<- bktst_FTSE_PSC %>% ggplot() + geom_line(aes(x=date,y=pnl),size=2,alpha=0.75) + ggtitle("FTSE PSC")
g_ftse_ss<- bktst_FTSE_SS %>% ggplot() + geom_line(aes(x=date,y=pnl),size=2,alpha=0.75) + ggtitle("FTSE SS")


@

\newpage
\section{Strategies for FTSE}

\subsection{CSC}

\begin{center}
\Sexpr{make_plot(plot(g_ftse_csc),height="20cm",width="20cm")}
\end{center}

\subsection{PSC}

\begin{center}
\Sexpr{make_plot(plot(g_ftse_psc),height="20cm",width="20cm")}
\end{center}

\subsection{SS}

\begin{center}
\Sexpr{make_plot(plot(g_ftse_ss),height="20cm",width="20cm")}
\end{center}

<<,cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=

bktst_NKY_CSC<-make_strategy(strategy=strategy_CSC,shedule[market=="nky"],all_vol[market=="nky"])
bktst_NKY_PSC<-make_strategy(strategy=strategy_PSC,shedule[market=="nky"],all_vol[market=="nky"])
bktst_NKY_SS<-make_strategy(strategy=strategy_SS,shedule[market=="nky"],all_vol[market=="nky"])

g_nky_csc<- bktst_NKY_CSC %>% ggplot() + geom_line(aes(x=date,y=pnl),size=2,alpha=0.75) + ggtitle("NKY CSC")
g_nky_psc<- bktst_NKY_PSC %>% ggplot() + geom_line(aes(x=date,y=pnl),size=2,alpha=0.75) + ggtitle("NKY PSC")
g_nky_ss<- bktst_NKY_SS %>% ggplot() + geom_line(aes(x=date,y=pnl),size=2,alpha=0.75) + ggtitle("NKY SS")

@

\newpage
\section{Strategies for NKY}

\subsection{CSC}

\begin{center}
\Sexpr{make_plot(plot(g_nky_csc),height="20cm",width="20cm")}
\end{center}

\subsection{PSC}

\begin{center}
\Sexpr{make_plot(plot(g_nky_psc),height="20cm",width="20cm")}
\end{center}

\subsection{SS}

\begin{center}
\Sexpr{make_plot(plot(g_nky_ss),height="20cm",width="20cm")}
\end{center}

\end{document}


