\documentclass{article}


\usepackage[portrait, headheight = 0cm, margin=0.25cm, top = 0.25cm]{geometry} 
\usepackage[export]{adjustbox} 
\usepackage{graphicx}
\usepackage[dvipsnames,table]{xcolor} % [dvipsnames,table] for setting colors \usepackage{amsmath} \usepackage{xfrac}
\usepackage{tikz}
\usetikzlibrary{shapes.geometric}
\usetikzlibrary{shapes.misc}
%\usetikzlibrary{external}
%\tikzexternalize % activate!
%\usepackage{sparklines}
\usepackage{xfrac}
\usepackage[space]{grffile}
\usepackage{hyperref}

\DeclareRobustCommand\Tstrut{\rule{0pt}{2.6ex}}         % = `top' strut
\DeclareRobustCommand\Bstrut{\rule[-0.9ex]{0pt}{0pt}}   % = `bottom' strut
\renewcommand{\familydefault}{\sfdefault}


\begin{document}


<<,cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=

source("https://raw.githubusercontent.com/satrapade/latex_utils/master/latex_helpers_v2.R")

source("https://raw.githubusercontent.com/satrapade/utility/master/utility_functions.R")

require(data.table)
require(scales)
require(RcppRoll)
require(magrittr)
require(fasttime)
require(lubridate)
require(scales)
require(fields)
require(gsubfn)
require(stringi)
require(Matrix)
require(akima)
require(ggplot2)

resampled_spx_vol<-"compressed_resampled_spx_vol.txt" %>% scan(character()) %>% decompress
resampled_ndx_vol<-"compressed_resampled_ndx_vol.txt" %>% scan(character()) %>% decompress
resampled_dax_vol<-"compressed_resampled_dax_vol.txt" %>% scan(character()) %>% decompress
resampled_sx5e_vol<-"compressed_resampled_sx5e_vol.txt" %>% scan(character()) %>% decompress

all_vol<-rbind( # data.table with all volatilities
  data.table(resampled_spx_vol,market="spx"),
  data.table(resampled_ndx_vol,market="ndx"),
  data.table(resampled_dax_vol,market="dax"),
  data.table(resampled_sx5e_vol,market="sx5e")
)[,.(
    Date=as.Date(stri_sub(Date,1,10),format="%Y-%m-%d"),
    Strike=Strike,
    Days=Days,
    ImpliedVol=ImpliedVol,
    ClosePrice=ClosePrice,
    market=market
)][,
  .(
    Strike=Strike,
    Days=Days,
    ImpliedVol=ImpliedVol,
    ClosePrice=ClosePrice,
    market=market,
    market_count=length(market)
  ),
  keyby=Date
][ClosePrice>0]

# surface pillars
all_strikes<-all_vol[,.(strikes=sort(unique(Strike))),keyby=market]
all_maturities<-all_vol[,.(maturities=sort(unique(Days))),keyby=market]

listed_expiries<-list(
    quote(month %in% c("March","June","September","December")),
    quote(wday=="Friday"),
    quote(wday_count==3)
)


#
# get common dates for all markets 
# in volsurface table
make_common_dates<-function(vsurfs){
  vsurfs[
    ,.(date=Date[1]),
    keyby=c("market","Date")
  ][
    ,.(markets=length(market)),keyby=date
  ][
    markets==max(markets),date
  ]
}


#
# make a shedule from a list of volatility surfaces
make_shedule<-function(volsurfs)
{
  common_dates<-make_common_dates(volsurfs)
  markets<-sort(unique(volsurfs$market))
  shedule_df <- data.table(
    date=rep(common_dates,times=length(markets)),
    market=rep(markets,each=length(common_dates))
  )
  shedule_df
}

# create a roll schedule from a shedule
make_roll_dates<-function(filter_list,vsurfs){
  
  shedule<-make_shedule(vsurfs)
  
  date_df<-data.table(
    date=shedule$date,
    day=day(shedule$date),
    mday=mday(shedule$date),
    qday=qday(shedule$date),
    yday=yday(shedule$date),
    pday=seq_along(shedule$date),
    wday=weekdays(shedule$date),
    month=months(shedule$date),
    wday_count=ceiling(mday(shedule$date)/7)
  )[,.SD,keyby=date]
  
  res0<-Reduce(function(a,b)eval(bquote(.(a)[.(b)])),filter_list,init=date_df)
  res1<-res0[,.SD,keyby=date]
  ndx<-sort(unique(res1$date))
  res2<-res1[J(ndx),.SD,mult="first"]
  res3<-data.table(
    res2,
    start=shedule$date[res2$pday],
    end=shedule$date[c(res2$pday[-1],nrow(shedule))],
    roll=1:nrow(res2)
  )
  shedule_with_roll<-data.table(shedule,roll=findInterval(shedule$date,res3$date))
  res4<-res3[,.SD,keyby=roll][shedule_with_roll[,.SD,keyby=roll]][roll>0][,.(
    roll=roll,
    date=i.date,
    start=start,
    end=end,
    market=market,
    maturity=as.integer(end-i.date)
  )]
  px<-all_vol[,.(
      date=as.Date(stri_sub(Date[1],1,10),format="%Y-%m-%d"),
      close=ClosePrice[1],
      vol=mean(ImpliedVol)
  ),keyby=c("market","Date"),][,.(date,market,close,vol)]
  
  res5<-px[,.SD,keyby=c("date","market")][res4[,.SD,keyby=c("date","market")]]
  
  res5
}

#
# interpolate vols
# on resampled vol surface
#
interpolate_vol<-function(date,strike,days,vsurf)
{
  strikes<-sort(unique(vsurf$Strike))
  maturities<-sort(unique(vsurf$Days))
  option_dets<-data.table(
    date=date,
    lo_strike=strikes[findInterval(strike,strikes)],
    hi_strike=strikes[findInterval(strike,strikes)+1],
    lo_mat=maturities[findInterval(days,maturities)],
    hi_mat=maturities[findInterval(days,maturities)+1]
  )
  vol_ll<-merge(x=option_dets,y=vsurf,by.x=c("date","lo_strike","lo_mat"),by.y=c("Date","Strike","Days"))$ImpliedVol
  vol_lh<-merge(x=option_dets,y=vsurf,by.x=c("date","lo_strike","hi_mat"),by.y=c("Date","Strike","Days"))$ImpliedVol
  vol_hl<-merge(x=option_dets,y=vsurf,by.x=c("date","hi_strike","lo_mat"),by.y=c("Date","Strike","Days"))$ImpliedVol
  vol_hh<-merge(x=option_dets,y=vsurf,by.x=c("date","hi_strike","hi_mat"),by.y=c("Date","Strike","Days"))$ImpliedVol
  t_strike<-(strike-option_dets$lo_strike)/(option_dets$hi_strike-option_dets$lo_strike)
  t_mat<-(days-option_dets$lo_mat)/(option_dets$hi_mat-option_dets$lo_mat)
  rowSums(cbind(
    vol_ll*(1-t_strike)*(1-t_mat),
    vol_hl*(t_strike)*(1-t_mat),
    vol_lh*(1-t_strike)*(t_mat),
    vol_hh*(t_strike)*(t_mat)
  ))
}

shedule<-make_roll_dates(
  filter_list=listed_expiries,
  vsurfs=all_vol
)

# option models

EC <- function(S,X,t,r,v)
{
  d1 <- (log(S/X)+(r+0.5*v^2)*t)/(v*sqrt(t))
  d2 <- d1-v*sqrt(t)
  S*pnorm(d1)-X*exp(-r*t)*pnorm(d2)
}


EP  <- function(S,X,t,r,v)
{
  d1 <- (log(S/X)+(r+0.5*v^2)*t)/(v*sqrt(t))
  d2 <- d1-v*sqrt(t)
  X*exp(-r*t)*pnorm(-d2)-S*pnorm(-d1)
}

#
#
#
compute_option_premium<-function(
  shedule,
  all_vol,
  strike_fun=function(close)close,
  model=EC
)merge(
  x=shedule[date==start,.(market,strike=strike_fun(close),roll)],
  y=shedule[,.(date,market,close,roll,maturity)],
  by.x=c("market","roll"),
  by.y=c("market","roll")
)[,
  local({
    the_strikes<-all_strikes[market,strikes]
    the_maturities<-all_maturities[market,maturities]
    i<-findInterval(pmax(strike,0),the_strikes)
    j<-findInterval(pmax(maturity,0),the_maturities)
    dets<-data.table(
      date=date,
      market=market,
      lo_strike=the_strikes[i],
      hi_strike=the_strikes[i+1],
      lo_maturity=the_maturities[j],
      hi_maturity=the_maturities[j+1]
    )
    vol_ll<-merge(
      x=dets,
      y=all_vol,
      by.x=c("market","date","lo_strike","lo_maturity"),
      by.y=c("market","Date","Strike","Days")
    )$ImpliedVol
    vol_lh<-merge(
      x=dets,
      y=all_vol,
      by.x=c("market","date","lo_strike","hi_maturity"),
      by.y=c("market","Date","Strike","Days")
    )$ImpliedVol
    vol_hl<-merge(
      x=dets,
      y=all_vol,
      by.x=c("market","date","hi_strike","lo_maturity"),
      by.y=c("market","Date","Strike","Days")
    )$ImpliedVol
    vol_hh<-merge(
      x=dets,
      y=all_vol,
      by.x=c("market","date","hi_strike","hi_maturity"),
      by.y=c("market","Date","Strike","Days")
    )$ImpliedVol
    t_strike<-(strike-dets$lo_strike)/(dets$hi_strike-dets$lo_strike)
    t_mat<-(maturity-dets$lo_maturity)/(dets$hi_maturity-dets$lo_maturity)
    vol<-rowSums(cbind(
      vol_ll*(1-t_strike)*(1-t_mat),
      vol_hl*(t_strike)*(1-t_mat),
      vol_lh*(1-t_strike)*(t_mat),
      vol_hh*(t_strike)*(t_mat)
    ))
    premium<-model(close, strike, maturity/365, 0,vol)
    list(date=date,strike=strike,strike_maturity=maturity,strike_vol=vol,premium=premium)
  }),
  keyby=market
]


system.time(backtest1<-merge(
  x=shedule,
  y=compute_option_premium(
    shedule,
    all_vol,
    strike_fun=identity,
    model=EC
  )[,.(market,date,strike,strike_vol,premium)],
  by.x=c("date","market"),
  by.y=c("date","market")
))

system.time(backtest2<-merge(
  x=shedule[market=="spx"],
  y=compute_option_premium(
    shedule[market=="spx"],
    all_vol[market=="spx"],
    strike_fun=function(x)x*0.9,
    model=EP
  )[,.(market,date,strike,strike_vol,premium)],
  by.x=c("date","market"),
  by.y=c("date","market")
))

g1<-shedule %>% 
  ggplot() +
  geom_line(aes(x=date,y=close,col=market)) +
  ggtitle("Market closing prices")



g2<-shedule %>% 
  ggplot() +
  geom_line(aes(x=date,y=vol,col=market)) +
  ggtitle("Market average volatility")


dof<-fread("dof.csv")
dof$Date<-as.Date(dof$Date,format="%Y-%m-%d")
dof$PnL<-cumsum(dof$PnL)

g3<-dof %>% 
  ggplot() +
  geom_line(aes(x=Date,y=PnL))




@


\tableofcontents

\newpage
\section{DOF performance}

\begin{center}
\Sexpr{make_plot(plot(g3),height="15cm",width="15cm")}
\end{center}

We wish to investigate the cause of infrequent, relatively large drawdowns.

\newpage
\section{Dataset}

We use historical volatility surfaces from JPM's OptionMetrics database.

\begin{tabular}{m{10cm}m{10cm}}
\Sexpr{make_plot(plot(g1),height="10cm",width="10cm")}
&
\Sexpr{make_plot(plot(g2),height="10cm",width="10cm")}
\end{tabular}


<<,cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
system.time(backtest2<-merge(
  x=shedule[market=="spx"],
  y=compute_option_premium(
    shedule[market=="spx"],
    all_vol[market=="spx"],
    strike_fun=function(x)x*0.9,
    model=EP
  )[,.(market,date,strike,strike_vol,premium)],
  by.x=c("date","market"),
  by.y=c("date","market")
))

system.time(backtest3<-merge(
  x=shedule[market=="spx"],
  y=compute_option_premium(
    shedule[market=="spx"],
    all_vol[market=="spx"],
    strike_fun=function(x)x*1.0,
    model=EP
  )[,.(market,date,strike,strike_vol,premium)],
  by.x=c("date","market"),
  by.y=c("date","market")
))

backtest<-data.table(
  date=backtest2$date,
  start=backtest2$start,
  end=backtest2$end,
  intrinsic=backtest2$strike-backtest3$strike,
  reval=backtest2$premium-backtest3$premium,
  market=backtest3$market
)

g4<-melt(backtest,id.vars="date",measure.vars=c("intrinsic","reval")) %>% 
  ggplot() +
  geom_line(aes(x=date,y=value,col=variable))+
  ggtitle("Quarterly rolling short 100-90 pct SPX put spreads")

@

\newpage
\section{backtest}

\begin{center}
\Sexpr{make_plot(plot(g4),height="15cm",width="15cm")}
\end{center}



\end{document}


